{"name":"Supermarketdash","tagline":"","body":"# SupermarketDash\r\n<html>\r\n\r\n\t<head>\r\n\t\t<style>\r\n\r\n\t\t\t@-webkit-keyframes bgscroll {\r\n\t\t\t\tfrom {background-position:0,100;}\r\n\t\t\t\tto {background-position:-1300px,0;}\r\n\t\t\t}\r\n\t\t\t.inner {\r\n\t\t\t\tbackground: url(\"supermarket.jpg\");\r\n\t\t\t\tposition:relative;\r\n\t\t\t\tbackground-size:60%;\r\n\t\t\t\theight: 650px;\r\n\t\t\t\twidth: 1350px;\r\n\t\t\t\tz-index:100;\r\n\t\t\t\t-webkit-animation:bgscroll 20s infinite linear;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#mycanvas { \r\n\t\t\t\tposition:relative;\r\n\t\t\t\tz-index: 20;\r\n\t\t\t}\r\n\r\n\t\t\t.container {  \r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tpadding:0;\r\n\t\t\t\twidth:100%;\r\n\t\t\t\theight:660px;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\r\n\t\t\t\r\n\t\t\r\n\t\t</style>\r\n\t\t\r\n\t\t<script src=\"http://cloud.github.com/downloads/processing-js/processing-js/processing-1.4.1.min.js\"></script>\r\n\t\t<script type=\"text/processing\" data-processing-target=\"mycanvas\">\r\n\t\t\r\n\tvar food1;\r\nvar bag;\r\nPfont font;\r\nvar w;\r\nvar h;\r\nvar score;\r\n/* @pjs preload=\"http://i57.tinypic.com/24glvmg.jpg\"; */\r\n\r\nPImage gameover;\r\n\tgameover = loadImage(\"http://i57.tinypic.com/24glvmg.jpg\");\r\n\t//gameover.resize(0, 50);\r\n    \r\n\r\nvoid setup(){\r\n\tfood1 = new ShoppingCart(1300);\r\n\tbag = new Player(50,200);\r\n\r\n  //  image(gameover, 0, 0);\r\n\t\r\n}\r\n\r\nvoid draw (){\r\n\tsize(1350, 660); // controls the size of the canvas\r\n\tbackground(0,0,0);\r\n\tbag.build();\r\n\tbag.move();\t\r\n\tw = bag.getScore();\r\n\th = bag.getHealth();\r\n\tfill(0, 0, 0);\r\n\ttextFont(\"Georgia\", 20);\r\n\ttext(\"Score: \" + w, 50,40);\r\n\ttext(\"Health: \" + h, 50,60);\r\n\t\tif (h <= 0) {\r\n\t\t\tbackground(255,255,255);\r\n\t\t\timage(gameover, 250, 100);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfood1.build();\r\n\tfood1.move();\r\n\tbag.check(food1);\r\n\tfood1.addFood();\r\n\t\t};\r\n}\r\n\r\nclass Player{\r\n\t\tvar xP;\r\n\t\tvar yP;\r\n\t\tvar score;\r\n\t\tvar health;\r\n\tPlayer(x, y){ \r\n\t\txP = x;\r\n\t\tyP = y;\r\n\t\tscore = 0;\r\n\t\thealth = 80;\r\n\t}\r\n\tvoid build(){ // draws the player\r\n\t\tnoStroke();\r\n\t\tfill(120, 63, 39);\r\n\t\trect(xP, yP, 50, 100);\r\n\t\tfill(255, 255, 255);\r\n\t\tellipse(xP+15, yP+20,10,10);\r\n\t\tellipse(xP+35, yP+20, 10, 10);\r\n\t\tfill(0, 0, 0);\r\n\t\tellipse(xP+15, yP+20,5,5);\r\n\t\tellipse(xP+35, yP+20, 5, 5);\r\n\t\tfill(255, 0, 0);\r\n\t\tarc(xP+26,yP+60,30,33,0 * (Math.PI/180),180 * (Math.PI/180));\r\n\t\tfill(255, 127, 174);\r\n\t\tarc(xP+26,yP+66,16,19,0 * (Math.PI/180),180 * (Math.PI/180));\r\n\t\tfill(0, 0, 0);\r\n\t\tarc(xP+26,yP+0,17,14,0 * (Math.PI/180),180 * (Math.PI/180));\r\n\t}\r\n\t\r\n\tvoid move(){ // moves the player\r\n\t\tif (keyPressed == true && keyCode == 17){\r\n\t\t\t\tbackground(0,0);\r\n\t\t\t\tbuild();\r\n\t\t\t\tyP -= 8;\r\n\t\t\t\tbackground(0,0);\r\n\t\t\t\tbuild(); \r\n\t\t\t\tyP = constrain(yP, 0, 450); // controls the limit of the y movement\r\n\t\t\t\t} else {\r\n\t\t\t\t{yP += 8;}\r\n\t\t\t\tbackground(0,0);\r\n\t\t\t\tbuild();\r\n\t\t\t\tyP = constrain(yP, 0, 450); // controls the limit of the y movement\r\n\r\n\t\t\t}\r\n\t\t}\r\n\tint getScore(){\r\n\t\treturn score;\r\n\t}\r\n\tint getHealth(){\r\n\t\treturn health;\r\n\t}\r\n\t\r\n\tint getX(){ // returns the x Position of player \r\n\t\treturn xP;\r\n\t}\r\n\tint getY(){ // returns the y position of player\r\n\t\treturn yP;\r\n\t}\r\n\tvoid check(ShoppingCart theFoodList){ // controls interaction between player and \"fruits\"\r\n\t\tvar aList = theFoodList.theFood(); //theFood() returns the foodList from the shopping cart class\r\n\t\tfor (var i = 0; i < aList.length; i++){\r\n\t\t\tif ((aList[i].getX() >= xP && aList[i].getX() <= (xP + 80)) &&\r\n\t\t\t(aList[i].getY() >= yP && aList[i].getY() <= (yP + 80))) {\r\n\t\t\taList[i].setX(-400);\r\n\t\t\t\tif(aList[i].getValue()) {\r\n\t\t\t\t\tscore++; \r\n\t\t\t\t\thealth += 3;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\thealth -= 20;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//Food class\r\nclass Food {\r\n\tvar xPos;\r\n\tvar yPos;\r\n\tvar name;\r\n\tvar value;\r\n\t//constructor\r\n\tFood(x,y, n) {\r\n\t\txPos = x;\r\n\t\tyPos = y;\r\n\t\tname = n;\r\n\t\tif (name == \"grape\" || name == \"carrot\" || name == \"watermelon\" || name == \"broccoli\" || name == \"shroom\"){value = true;}\r\n\t\telse {value = false;}\r\n\t}\r\n\t//build function\r\n\t\tvoid build() {\r\n\t\t\t//grape code\r\n\t\tif (name == \"grape\"){\r\n\t\t\tstrokeWeight(10);\r\n\t\t\tstroke(77, 18, 18);\r\n\t\t\tline(xPos+16, yPos, xPos+19, yPos-23);\r\n\t\t\tstroke(0, 0, 0);\r\n\t\t\tstrokeWeight(2);\r\n\t\t\tfill(60, 2, 107);\r\n\t\t\tellipse(xPos,yPos, 25, 25);\r\n\t\t\tellipse(xPos+31,yPos, 25, 25);\r\n\t\t\tellipse(xPos+15,yPos, 25, 25);\r\n\t\t\tellipse(xPos+23,yPos+19, 25, 25);\r\n\t\t\tellipse(xPos+8,yPos+19, 25, 25);\r\n\t\t\tellipse(xPos+16,yPos+38, 25, 25);\r\n\t\t\t} else if( name == \"fry\"){\r\n\t\t\t//fry\r\n\t\t\tstroke(0,0,0);\r\n\t\t\tfill(255, 255, 0);\r\n\t\t\tstrokeWeight(1);\r\n\t\t\trect(xPos,yPos-19,9,33);\r\n\t\t\trect(xPos+10,yPos-19,9,33);\r\n\t\t\trect(xPos+20,yPos-19,9,33);\r\n\t\t\trect(xPos+30,yPos-19,9,33);\r\n\t\t\tfill(255, 0, 0);\r\n\t\t\tstrokeWeight(2);\r\n\t\t\trect(xPos,yPos,40,50);\r\n\t\t\tfill(255, 255, 255);\r\n\t\t\tellipse(xPos+20,yPos+27,27,27);\r\n\t\t\tfill(255, 255, 0);\r\n\t\t\trect(xPos+17, yPos+17, 6, 20);\r\n\t\t\tnoStroke();\r\n\t\t\t} else if (name == \"carrot\"){\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tstrokeWeight(5);\r\n\t\t\t\tstroke(9, 66, 0);\r\n\t\t\t\tline(xPos+17, yPos-21, xPos+27, yPos + 12);\r\n\t\t\t\tline(xPos+26, yPos-21, xPos+27, yPos + 12);\r\n\t\t\t\tline(xPos+37, yPos-21, xPos+27, yPos + 12);\r\n\t\t\t\tstrokeWeight(1);\r\n\t\t\t\tfill(255, 132, 0);\r\n\t\t\t\ttriangle(xPos +10, yPos, xPos + 27, yPos + 62, xPos + 46, yPos);\r\n\t\t\t\tnoStroke();\r\n\t\t\t} else if (name == \"ice cream\"){\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tfill(255, 255, 255);\r\n\t\t\t\tstrokeWeight(1);\r\n\t\t\t\tellipse(xPos - 38, yPos, 30, 30);\r\n\t\t\t\tellipse(xPos - 10, yPos, 30, 30);\r\n\t\t\t\tellipse(xPos - 24, yPos + -21, 30, 30);\r\n\t\t\t\tellipse(xPos + 10, yPos + -11, 30, 30);\r\n\t\t\t\tellipse(xPos + 37, yPos + -2, 30, 30);\r\n\t\t\t\tellipse(xPos + -1, yPos + -24, 30, 30);\r\n\t\t\t\tellipse(xPos + 33, yPos + -16, 30, 30);\r\n\t\t\t\tellipse(xPos + 19, yPos + -40, 30, 30);\r\n\t\t\t\tellipse(xPos + -17, yPos + -40, 30, 30);\r\n\t\t\t\tellipse(xPos + 0, yPos + -55, 30, 30);\r\n\t\t\t\tfill(255, 0, 0);\r\n\t\t\t\tellipse(xPos, yPos - 70, 15, 15);\r\n\t\t\t\tline(xPos, yPos-69, xPos+7, yPos-82);\r\n\t\t\t\tellipse(xPos, yPos - 70, 15, 15);\r\n\t\t\t\tfill(0, 217, 255);\r\n\t\t\t\tarc(xPos, yPos, 107, 68, 0 * (Math.PI/180), 180 * (Math.PI/180));\r\n\t\t\t\tnoStroke();\r\n\t\t\t} else if (name == \"watermelon\"){\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tfill(30, 102, 4);\r\n\t\t\t\tarc(xPos, yPos, 75, 75, 0 * (Math.PI/180), 180* (Math.PI/180));\r\n\t\t\t\tfill(255, 0, 0);\r\n\t\t\t\tarc(xPos, yPos, 61, 61, 0 * (Math.PI/180), 180 * (Math.PI/180));\r\n\t\t\t\tfill(0, 0, 0);\r\n\t\t\t\tellipse(xPos - 11, yPos+20, 2, 2);\r\n\t\t\t\tellipse(xPos + (10), yPos+20, 2, 2);\r\n\t\t\t\tellipse(xPos + (-1), yPos+10, 2, 2);\r\n\t\t\t\tellipse(xPos + (19), yPos+10, 2, 2);\r\n\t\t\t\tellipse(xPos + (-17), yPos+10, 2, 2);\r\n\t\t\t\tellipse(xPos + (-8), yPos+5, 2, 2);\r\n\t\t\t\tellipse(xPos + (9), yPos+6, 2, 2);\r\n\t\t\t\tellipse(xPos + (-1), yPos+19, 2, 2);\r\n\t\t\t\tnoStroke();\r\n\t\t\t} else if (name == \"soda\"){\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tstrokeWeight(5);\r\n\t\t\t\tline(xPos+10, yPos-10, xPos + 16, yPos + -77);\r\n\t\t\t\tline(xPos+ 20, yPos-83, xPos + 16, yPos + -77);\r\n\t\t\t\tstrokeWeight(2);\r\n\t\t\t\tfill(80, 255, 0);\r\n\t\t\t\tquad(xPos, yPos, xPos+-10, yPos -60, xPos + 39, yPos - 60, xPos +32, yPos -0);\r\n\t\t\t\tfill(255, 255, 255);\r\n\t\t\t\tnoStroke();\r\n\t\t\t\tellipse(xPos+15, yPos-25, 35, 15);\r\n\t\t\t\tnoStroke();\r\n\t\t\t} else if (name == \"broccoli\") {\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tfill(42, 87, 0);\r\n\t\t\t\trect(xPos, yPos, 8, 36);\r\n\t\t\t\tellipse(xPos, yPos, 15, 15);\r\n\t\t\t\tellipse(xPos, yPos+11, 15, 15);\r\n\t\t\t\tellipse(xPos-10, yPos+5, 15, 15);\r\n\t\t\t\tellipse(xPos+12, yPos+5, 15, 15);\r\n\t\t\t\tellipse(xPos+12, yPos+-6, 15, 15);\r\n\t\t\t\tellipse(xPos+12, yPos+16, 15, 15);\r\n\t\t\t\tnoStroke();\r\n\t\t\t}\r\n\t\t\telse if (name == \"donut\")  {\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tfill(230, 210, 170);\r\n\t\t\t\tstrokeWeight(1);\r\n\t\t\t\tellipse(xPos, yPos, 70, 70);\r\n\t\t\t\tfill(250, 195, 237);\r\n\t\t\t\tellipse(xPos, yPos, 60, 60);\r\n\t\t\t\tfill(255, 255, 255);\r\n\t\t\t\tellipse(xPos, yPos, 15, 15);\r\n\t\t\t\tnoStroke();\r\n\t\t\t}\r\n\t\t\telse if (name == \"shroom\") {\r\n\t\t\t\tstrokeWeight(1);\r\n\t\t\t\tstroke(0, 0, 0);\r\n\t\t\t\tfill(235, 195, 115);\r\n\t\t\t\trect(xPos-4, yPos, 26, 44);\r\n\t\t\t\tstroke(0, 0, 0);\r\n\t\t\t\tarc(xPos + 10, yPos+10, 62, -83, 0 * (Math.PI/180), 180*(Math.PI/180));\r\n\t\t\t\tnoStroke();\r\n\t\t\t}else if (name == \"cupcake\") {\r\n\t\t\t\tstroke(0,0,0);\r\n\t\t\t\tfill(173, 123, 62);\r\n\t\t\t\tquad(xPos - 42, yPos - 73, xPos + 53, yPos - 51,xPos+41, yPos, xPos-22, yPos);\r\n\t\t\t\tfill(35, 171, 173, 200);\r\n\t\t\t\tquad(xPos - 36, yPos - 50, xPos + 54, yPos - 49,xPos+41, yPos, xPos-22, yPos);\r\n\t\t\t\tstrokeWeight(-4);\r\n\t\t\t\tline(xPos-10, yPos, xPos + -24, yPos -49);\r\n\t\t\t\tline(xPos-(-2), yPos, xPos + -9, yPos -50);\r\n\t\t\t\tline(xPos-(-33), yPos, xPos + 44, yPos -50);\r\n\t\t\t\tline(xPos-(-23), yPos, xPos + 26, yPos -48);\r\n\t\t\t\tline(xPos-(-12), yPos, xPos + 9, yPos -49);\r\n\t\t\t\tfill(173, 123, 62);\r\n\t\t\t\tarc(xPos+8, yPos-42, 116, -119, 0 * (Math.PI/180), 180 * (Math.PI/180));\r\n\t\t\t\tfill(255, 255, 255);\r\n\t\t\t\tarc(xPos+8, yPos-62, 111, -80, 0* (Math.PI/180), 180* (Math.PI/180));\r\n\t\t\t\tnoStroke();\r\n\t\t\t} else {}\r\n\t\t\r\n\t}\r\n\t//move function\r\n\tvoid move() {\r\n\t\txPos -= 8;\r\n\t}\r\n\t//function that returns a food's x value\r\n\tint getX() {\r\n\t\treturn xPos;\r\n\t}\r\n\tint getY(){\r\n\t\treturn yPos;\r\n\t}\r\n\tvoid setX(num){\r\n\t\txPos = num;\r\n\t}\r\n\tvoid getValue(){\r\n\t\treturn value;\r\n\t}\r\n\t\r\n}// food ends\r\nclass ShoppingCart{\r\n\tvar foodList = [];\r\n\tvar things = [\"grape\", \"carrot\", \"watermelon\", \"broccoli\", \"fry\",  \"ice cream\",  \"soda\", \"donut\", \"shroom\", \"cupcake\"];\r\n\tvar xP;\r\n\tvar size;\r\n\tShoppingCart(x){\r\n\t\txP = x;\r\n\t\tfor(var i = 0; i < 15; i++){\r\n\t\t\tvar tempX = random(0,2); // determines y\r\n\t\t\tvar y = random(50, 450);\t\t\t\t\t\r\n\t\t\tfoodList.push(new Food(  (1350 + ( i * 200 )) ,y, things[(int) random(things.length)]  )   );\r\n\t\t}\r\n\t}\r\n\t\t//build function\r\n\t\tvoid build() { // calls every single build\r\n\t\t\tfor (var i = 0; i < foodList.length; i++) {\r\n\t\t\t\tfoodList[i].build();\r\n\t\t\t}\r\n\t\t}\r\n\t\t//move function\r\n\t\tvoid move() { // this goes and moves everything pushed into foodList\r\n\t\t\tfor (var i = 0; i < foodList.length; i++) {\r\n\t\t\t\tfoodList[i].move();\r\n\t\t\t}\r\n\t\t}\r\n\t\tint[] theFood(){ // a list that returns the foods in the shoppingcart class\r\n\t\t\treturn foodList;\r\n\t\t}\t\r\n\t\tvoid addFood(){\r\n\t\t\tif (foodList[foodList.length-1].getX() < 1210){\r\n\t\t\t\t/*for(var i = 0; i < 10; i++){\r\n\t\t\t\t\tfoodList.push(new Food(  (1350 + ( i * 200 )) ,y, things[(int) random(things.length)]  ) );\r\n\t\t\t\t\t}*/\r\n\t\t\t\tconsole.log(foodList.length);\r\n\t\t\t\tfoodList.shift();\r\n\t\t\t\tconsole.log(foodList.length);\r\n\t\t\t\tvar y = random(50, 450);\r\n\t\t\t\tfoodList.push(new Food((1350) ,y, things[(int) random(things.length)]  ) );\r\n\t\t\t\tconsole.log(foodList.length);\r\n\t\t\t\t}\t\r\n\t\t}\r\n}\r\n\r\n\t\t</script>\r\n\t</head>\r\n\t\r\n\t<body>\r\n\t\t<div class= \"inner\">\r\n\t\t\t\t<div class= \"container\">\r\n\t\t\t\t\t<canvas id=\"mycanvas\"></canvas>\r\n\t\t\t\t</div>\t\r\n\t\t</div>\r\n\t</body>\r\n\t\r\n</html>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}